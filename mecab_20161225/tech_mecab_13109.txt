Re: [面試] AMI面試主管真是佛心來著 - 看板 Tech_Job - 批踢踢實業坊作者deo2000 (800IM)看板Tech_Job標題Re: [面試] AMI面試主管真是佛心來著時間Sat Jan 12 09:49:59 2013推 askacis:我剛用gcc試了一下，兩種寫法翻出來的ASM是一樣的→ askacis:這樣犧牲可讀性的寫法真的有比較好? 我也寫過MCU,也知道→ askacis:可能是我搞錯啦~只是不曉得原原PO有沒有驗證過到底省多少?用 keil 3 編出來的組語,如果只有 if(敘述式) V.S. (敘述式)&amp;&amp; 的確一樣。但是我當初的狀況，其實是要對N為奇數或偶數，做不同運算，所以我比較 「if-else if」 V.S. 「()&amp;&amp; !()&amp;&amp;」兩種語法的組語後者雖然少一行，但我對組語不熟，也不敢99.9%說少這一行就比較快，所以貼上來讓大家公評，如果後者沒比較快，我就為此事道歉code comparehttp://i.imgur.com/pHv26.png<img alt="" src="//i.imgur.com/pHv26.png"/>如果要說後者code style不符合某些業界的習慣，造成團隊效率降低我承認，我並非有業界經驗的人，他們可以對新人這樣要求，或說即戰力不高，但以此評價新人的長期能力則會失準--※ 發信站: 批踢踢實業坊(ptt.cc)◆ From: 140.122.165.222推 Kaeze:是說對組語不熟，當初怎麼評斷這樣效率有沒有比較好?以對組語粗淺的知識來判斷→ comipa:P2是奇數的話,應該左邊比較快.中間就直接ret了.→ comipa:而且不是奇數當然就是偶數..幹嘛判斷兩次..→ patoo:是說左邊應該不需要第2個if吧 P2&amp;1 不是0就是1 else就好了..→ comipa:樓上無誤..→ lesam512:結論...原PO的code跑更慢~~~~~~~~~~~~~~~~~~~~~~~~if elseif 8行&amp;&amp; !()&amp;&amp;  7行if else   6行很抱歉，我左右兩邊都是更慢的但是請勿失去焦點，最初的爭議還是在 AMI 主管認為「短路運算子」和「逗號運算子」根本不合法→ diabloevagto:除非你能肯定沒有更好的寫法，不然有時候compiler→ diabloevagto:本身的優化是更好的推 jlhc:其實大家在這過程中都進步了 原PO還是給了大家討論的發展空間※ 編輯: deo2000         來自: 140.122.165.222      (01/12 11:10)噓 lesam512:只不過比面試主管多懂一個冷門又不實用的寫法 就上來酸他→ lesam512:你的code反而跑得更慢, 而且又難看! 有很了不起嗎?→ comipa:我不認同AMI主管講話方式,不過TechJob焦點本來就是在求職→ comipa:你現在在這邊喊焦點是在程式寫法..不是白說的嗎...焦點是藉技術問題來看雙方的心態求職者不了解業界習慣公司主管把自身經驗擴大解釋成最嚴謹的語法※ 編輯: deo2000         來自: 140.122.165.222      (01/12 11:25)→ comipa:所以一個是沒看過的寫法就先全盤否認,一個是用一些冷僻用法→ comipa:上來討拍(然後這寫法也沒比較好)...推 askacis:那主管應該很久沒面試了，很多公司喜歡出這樣的題目考人XD推 askacis:不過原PO也學到不用%取餘數的方法，大家開心就好啦XD推 askacis:要是我是主管，不用%取餘得到的分數會比原PO的寫法來的高                                              是阿,為了此事第一次認真地看組語→ chester06:不同CPU架構的compiler會有差異, 你覺得效能好的寫法在→ chester06:某些cpu上不見得試用, 而且現在的cpu有很多偷吃步的作法→ chester06:像是superscalar pipeline.. 所以我覺得你一直在爭論哪→ chester06:一種方式才是最佳解很沒意義,要看CPU架構採取不同的方式→ chester06:而且可讀性/軟體軟體架構我覺得才是日後發展的關鍵→ chester06:"適用", 筆誤您說的沒錯，在Tech_Job版爭這種技術，格局實在太小了推 RealJustice:樓上也是正解 不保證快 保證難懂 根本沒價值推 chester06:而且光是你會用%來判斷奇偶數這點,就已經不是效能的保證推 RealJustice:樓上突破盲點了 說老實話我才被點醒 原PO懂了沒?→ RealJustice:原PO去查怎麼判斷奇偶數更快吧 效能可能差到百倍千倍抱歉，以AT89S51為平台編出來的asm完全一樣http://imgur.com/VIgWi<img alt="" src="//i.imgur.com/VIgWi.jpg"/>推 RealJustice:那你的方法好在哪裡? ^_^ 再來 MOD的速度問題解決了?※ 編輯: deo2000         來自: 140.122.165.222      (01/12 12:47)※ 編輯: deo2000         來自: 140.122.165.222      (01/12 12:51)推 askacis:那是編譯器聰明，跟你沒有關係XD推 askacis:說難聽點，光用%做運算就會讓人質疑你有沒有寫過mcu→ askacis:你拿語法出來說嘴只會讓閱聽者覺得是在炫技推 askacis:如果你面試題目都做對再來跟主管討論語法→ askacis:才會讓人覺得你有點credit~~推 askacis:不想對剛畢業的人說重話，但是你的態度還真讓人不敢恭維推 chester06:會完全一樣是因為Keil C的compiler幫你做掉了→ chester06:可以參考instruction set的JNB指令→ chester06:http://tinyurl.com/cuwzg7x→ chester06:但不能保證每種cpu core的指令集都支援類似的指令→ chester06:像是x86, ARM, PowerPC, mips,每家都會有自己的應用推 chester06:有興趣可以去看看ARM的application note, 裡面有一些文→ chester06:件就是有特別說明對於ARM架構來說, 用除法方式來做計算→ chester06:的缺點, 當然如果你覺得現代的compiler技術很聰明,不需→ chester06:我們開發時格外小心~ 那我也沒話說, 鬼打牆到此為止 XD→ chester06:我只能說演算法/架構才是一切的基礎, coding style是可→ chester06:以方便後續開發人員參與討論或trace code的方式→ chester06:而且我想你既然都把asm秀出來做比較, 很明顯就是編譯器→ chester06:本來就會做一些最佳化的動作,那還不如寫得易懂有條理→ chester06:我想大家的重點是在這裡, 而不是硬要定你對語法的敏銳度推 chester06:現在的軟體開發不管是大型系統或是小型的SoC,整個架構都→ chester06:很複雜, 分工也很細,不是每個人對語法的進階技巧都熟悉→ chester06:否則也不會有一堆公司強調SW必遵守Coding Convention→ bloodycat:你先試試看optmiztion關掉，再看看後面會不會跑噓 hahafox:難道我會return EFI_SUCCESS;也要拿來說嘴?????→ WPC001:Keil跑得起來很了不起嗎? 萬一遇到別家的編譯器編不過時呢?噓 ccd1006:不要在"最佳化"上面打轉，AMI的考題就助教大人您自評應該→ ccd1006:應該能夠得幾分啊？噓 RealJustice:樓上大大 他不會用&amp;1判斷奇偶數 談效能根本差很遠推 mmonkeyboyy:@@" 不就是看最後一位是啥就好了啊?→ mmonkeyboyy:還有一個方法是shift後看carry就好了→ Gaak:結果那個主管要叫你在去嗎~~ ?推 DeanMX:()&amp;&amp; !()&amp;&amp; 事實上是兩個if, 不能拿if-else if做比較, asm→ DeanMX:一定會不一樣的推文自動更新已關閉